[{"D:\\travel\\src\\index.js":"1","D:\\travel\\src\\App.js":"2","D:\\travel\\src\\components\\Header\\Header.jsx":"3","D:\\travel\\src\\components\\List\\list.jsx":"4","D:\\travel\\src\\components\\map\\map.jsx":"5","D:\\travel\\src\\api\\index.js":"6","D:\\travel\\src\\components\\List\\style.js":"7","D:\\travel\\src\\components\\Header\\style.js":"8","D:\\travel\\src\\components\\map\\style.js":"9","D:\\travel\\src\\components\\PlaceDetails\\PlaceDetails.jsx":"10","D:\\travel\\src\\components\\PlaceDetails\\style.js":"11"},{"size":153,"mtime":1697571007661,"results":"12","hashOfConfig":"13"},{"size":2790,"mtime":1699133593415,"results":"14","hashOfConfig":"13"},{"size":1621,"mtime":1699134454856,"results":"15","hashOfConfig":"13"},{"size":2565,"mtime":1699158522337,"results":"16","hashOfConfig":"13"},{"size":3243,"mtime":1698533456321,"results":"17","hashOfConfig":"13"},{"size":601,"mtime":1699127811075,"results":"18","hashOfConfig":"13"},{"size":514,"mtime":1698085799802,"results":"19","hashOfConfig":"13"},{"size":1211,"mtime":1698081884193,"results":"20","hashOfConfig":"13"},{"size":459,"mtime":1698255106736,"results":"21","hashOfConfig":"13"},{"size":3216,"mtime":1699159506217,"results":"22","hashOfConfig":"13"},{"size":361,"mtime":1698440213982,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"e99ryb",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\travel\\src\\index.js",[],"D:\\travel\\src\\App.js",["50","51"],"import React, {useState, useEffect} from \"react\";\r\nimport {CssBaseline, Grid } from '@material-ui/core' ;\r\n\r\nimport { getplacesData } from \"./api\";\r\nimport Header from './components/Header/Header';\r\nimport List from \"./components/List/list\";\r\nimport Map from \"./components/map/map\";\r\n\r\nconst App =() => {\r\n    const [places,setPlaces] = useState([]);\r\n    const [filteredPlaces, setFilteredPlaces] = useState([]);\r\n    const [childClicked, setChildClicked] = useState(null);\r\n\r\n    const [coordinates, setCoordinates] = useState({});\r\n    const [bounds, setBounds] = useState({});\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [type ,setType] = useState('restaurants');\r\n    const [rating, setRating] = useState('');\r\n\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition(({coords: {latitude, longitude} }) => {\r\n            setCoordinates({ lat: latitude, lng: longitude});\r\n\r\n        });\r\n    }, []); \r\n      \r\n    useEffect(() => {\r\n        const filtered = places.filter((place) => Number(place.rating) > rating);\r\n    \r\n        setFilteredPlaces(filtered);\r\n      }, [rating]);\r\n\r\n    useEffect( () => {\r\n        if (bounds.sw && bounds.ne) {\r\n            setIsLoading(true);\r\n      \r\n\r\n        getplacesData(type, bounds.sw, bounds.ne)\r\n            .then((data) => { \r\n                console.log(data); \r\n                setPlaces(data?.filter((place) => place.name && place.num_reviews > 0));\r\n                setFilteredPlaces([]);\r\n                setPlaces(data);\r\n                setIsLoading(false);\r\n            });\r\n        }    \r\n    }, [type, bounds]);\r\n\r\n    \r\n\r\n   \r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Header  setCoordinates={setCoordinates} />\r\n            <Grid container spacing={3} style = {{ width : '100%'}}>\r\n                <Grid item xs={12} md={4}>\r\n                    <List \r\n                        places={places} \r\n                        childClicked={childClicked}\r\n                        isLoading={isLoading}\r\n                        setChildClicked={setChildClicked} \r\n                        type={type}\r\n                        setType={setType}\r\n                        rating={rating}\r\n                        setRating={setRating}\r\n\r\n                    />\r\n\r\n                </Grid>\r\n                <Grid item xs={12} md={8}>\r\n                    <Map\r\n                        setCoordinates={setCoordinates}\r\n                        setBounds={setBounds}\r\n                        coordinates={coordinates}\r\n                        bounds={bounds}\r\n                        places={places}\r\n                       setChildClicked={setChildClicked}\r\n                    />\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;","D:\\travel\\src\\components\\Header\\Header.jsx",[],"D:\\travel\\src\\components\\List\\list.jsx",["52"],"import React, { useState, useEffect, createRef } from 'react';\r\nimport { CircularProgress, Grid, Typography, InputLabel, MenuItem, FormControl, Select } from '@material-ui/core';\r\n\r\nimport PlaceDetails from '../PlaceDetails/PlaceDetails';\r\nimport useStyles from './style';\r\n\r\nconst List = ({places, childClicked, isLoading, setChildClicked, type,setType, rating, setRating}) => {\r\n    const classes = useStyles();\r\n    \r\n    const[elRefs, setElRefs] = useState([]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n      const refs = Array(places?.length).fill().map((_, i) => elRefs[i] || createRef());\r\n      setElRefs(refs);\r\n    }, [places]);\r\n\r\n    console.log('Places:', places);\r\n\r\n    return (\r\n         <div className={classes.container}>\r\n            <Typography variant=\"h4\">Restaurants, Hotel & Attractions around you</Typography>\r\n            {isLoading ? (\r\n              <div className={classes.loading}>\r\n                  <CircularProgress size=\"5rem\" />\r\n              </div>\r\n            ) : (\r\n              <>\r\n            <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"type\">Type</InputLabel>\r\n            <Select id=\"type\" value={type} onChange={(e) => setType(e.target.value)}>\r\n              <MenuItem value=\"restaurants\">Restaurants</MenuItem>\r\n              <MenuItem value=\"hotels\">Hotels</MenuItem>\r\n              <MenuItem value=\"attractions\">Attractions</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"rating\">Rating</InputLabel>\r\n            <Select id=\"rating\" value={rating} onChange={(e) => setRating(e.target.value)}>\r\n              <MenuItem value=\"0\">All</MenuItem>\r\n              <MenuItem value=\"3\">Above 3.0</MenuItem>\r\n              <MenuItem value=\"4\">Above 4.0</MenuItem>\r\n              <MenuItem value=\"4.5\">Above 4.5</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <Grid container spacing={3} className={classes.list}>\r\n            {places?.map((place, i) => (\r\n              <Grid \r\n                item \r\n                key={i}  \r\n                xs={12}\r\n                onClick={() => setChildClicked(i)}\r\n                >\r\n                <PlaceDetails \r\n                  place={place}\r\n                  \r\n                  selected={childClicked === i}\r\n                  refProp={elRefs[i]}\r\n                  \r\n                />\r\n              </Grid>\r\n           ))}\r\n          </Grid>\r\n          </>\r\n          )}\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default List;","D:\\travel\\src\\components\\map\\map.jsx",["53","54","55","56"],"import React, {useEffect, useState} from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { Paper, Typography, useMediaQuery } from '@material-ui/core';\r\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\n\r\nimport useStyles from './style';\r\nimport { LocationOnOutlined } from '@material-ui/icons';\r\n\r\n\r\n\r\nconst Map = ({ setCoordinates, setBounds, coordinates, places ,setChildClicked}) => {\r\n    const classes = useStyles();\r\n    const isDesktop = useMediaQuery('(min-width:600px)');\r\n\r\n    const handleCardClick = (index) => {\r\n        console.log('Marker clicked: ${index}');\r\n        setChildClicked(index); // Update the selected card index in the List component\r\n      };\r\n\r\n    return (\r\n        <div className={classes.mapContainer}>\r\n            <GoogleMapReact\r\n                bootstrapURLKeys={{ key: 'AIzaSyBgeThmTc8Dv5wvNn2DZg-Qza2I14X7g_s' }}\r\n                defaultCenter={coordinates}\r\n                center={coordinates}\r\n                defaultZoom={14}\r\n                margin={[50, 50, 50, 50]}\r\n                options={''}\r\n                onChange={(e) => {\r\n                    console.log(e);\r\n                    setCoordinates({ lat: e.center.lat, lng: e.center.lng });\r\n                    setBounds({ ne: e.marginBounds.ne, sw: e.marginBounds.sw });\r\n                }}\r\n                onChildClick={(child) => handleCardClick(child)}\r\n             >\r\n                {places?.map ((place, i) =>(\r\n                        <div\r\n                            className={classes.markerContainer}\r\n                            lat={Number(place.latitude)}\r\n                            lng={Number(place.longitude)}\r\n                            key={i}\r\n                            onClick={() => handleCardClick(i)} // Handle card click on the map\r\n                       > \r\n                       {\r\n                            !isDesktop ? (\r\n                                <LocationOnOutlinedIcon color=\"primary\" fontSize=\"large\" />\r\n                            ) : (\r\n                                <Paper elevation={3} className={classes.paper} >\r\n                                    <Typography className={classes.typography} variant=\"subtitle2\" gutterBottom> {place.name}\r\n                                    </Typography>\r\n                                    <img\r\n                                        className={classes.pointer}\r\n                                        src={place.photo ? place.photo.images.large.url : 'https://cdn.vox-cdn.com/thumbor/Dy6WV2AqbJ1aiMtivZgIkY4rW1I=/0x0:3861x2574/1200x800/filters:focal(1623x979:2239x1595)/cdn.vox-cdn.com/uploads/chorus_image/image/58954053/BK_5.0.0.0.jpg'}\r\n                                        alt={place.name}\r\n                                    />\r\n                                    <Rating name=\"read-only\" size=\"small\" value={Number(place.rating)} readOnly />\r\n\r\n                                </Paper>\r\n\r\n                            )\r\n                        }\r\n                        \r\n                        </div>\r\n                    ))}\r\n            </GoogleMapReact>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Map;\r\n\r\n                \r\n","D:\\travel\\src\\api\\index.js",[],"D:\\travel\\src\\components\\List\\style.js",[],"D:\\travel\\src\\components\\Header\\style.js",[],"D:\\travel\\src\\components\\map\\style.js",[],"D:\\travel\\src\\components\\PlaceDetails\\PlaceDetails.jsx",["57","58"],"import React, { useEffect } from 'react';\r\nimport{ Box, Typography, Button, Card, CardMedia, CardContent, CardActions, Chip} from '@material-ui/core'\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\nimport useStyles from './style';\r\n\r\nconst PlaceDetails = ({ place, selected, refProp, onCardClick  }) => {\r\n    const classes = useStyles();\r\n    \r\n    \r\n    if(selected) refProp?.current?.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n      \r\n    \r\n   \r\n    return (\r\n    <Card elevation={6} >\r\n        <CardMedia\r\n        style={{ height: 350 }}\r\n        image={place.photo ? place.photo.images.large.url : 'https://cdn.vox-cdn.com/thumbor/Dy6WV2AqbJ1aiMtivZgIkY4rW1I=/0x0:3861x2574/1200x800/filters:focal(1623x979:2239x1595)/cdn.vox-cdn.com/uploads/chorus_image/image/58954053/BK_5.0.0.0.jpg'}\r\n        title={place.name}\r\n      />   \r\n        <CardContent>\r\n            <Typography gutterBottom variant=\"h5\">{place.name}</Typography>\r\n             <Box display=\"flex\" justifyContent=\"space-between\" my={2}>\r\n            <Rating name=\"read-only\" value={Number(place.rating)} readOnly />\r\n            <Typography component=\"legend\">{place.num_reviews} review{place.num_reviews > 1 && 's'}</Typography>\r\n            </Box>\r\n           \r\n            <Box display=\"flex\" justifyContent=\"space-between\">\r\n                <Typography variant=\"subtitle1\">Price</Typography>   \r\n                 <Typography gutterBottom variant=\"subtitle1\">{place.price_level}</Typography>   \r\n            </Box>\r\n            <Box display=\"flex\" justifyContent=\"space-between\">\r\n                <Typography variant=\"subtitle1\">Ranking</Typography>   \r\n                 <Typography gutterBottom variant=\"subtitle1\">{place.ranking}</Typography>   \r\n            </Box>\r\n        {place?.awards?.map((award) => (\r\n            <Box display=\"flex\" justifyContent=\"space-between\" my={1} alignItems=\"center\">\r\n                <img src={award.images.small} />\r\n                <Typography variant=\"subtitle2\" color=\"textSecondary\">{award.display_name}</Typography>\r\n            </Box> \r\n            ))}\r\n            {place?.cuisine?.map(({name}) =>(\r\n                <Chip key={name} size=\"small\" label={name} className={classes.chip}/>\r\n            ))}\r\n            {place.address && (\r\n          <Typography gutterBottom variant=\"body2\" color=\"textSecondary\" className={classes.subtitle}>\r\n                <LocationOnIcon />{place.address}\r\n          </Typography>\r\n        )}\r\n        {place.phone && (\r\n          <Typography variant=\"body2\" color=\"textSecondary\" className={classes.spacing}>\r\n            <PhoneIcon /> {place.phone}\r\n          </Typography>\r\n        )} \r\n        <CardActions>\r\n            <Button size=\"small\" color=\"primary\" onClick={() => window.open(place.web_url, '_blank')}>\r\n            Trip Advisor\r\n            </Button>\r\n            <Button size=\"small\" color=\"primary\" onClick={() => window.open(place.website, '_blank')}>\r\n             Website\r\n            </Button>\r\n        </CardActions>\r\n\r\n        </CardContent> \r\n         \r\n    </Card>        \r\n    );\r\n}\r\n\r\nexport default PlaceDetails;","D:\\travel\\src\\components\\PlaceDetails\\style.js",[],{"ruleId":"59","severity":1,"message":"60","line":11,"column":12,"nodeType":"61","messageId":"62","endLine":11,"endColumn":26},{"ruleId":"63","severity":1,"message":"64","line":33,"column":10,"nodeType":"65","endLine":33,"endColumn":18,"suggestions":"66"},{"ruleId":"63","severity":1,"message":"67","line":17,"column":8,"nodeType":"65","endLine":17,"endColumn":16,"suggestions":"68"},{"ruleId":"59","severity":1,"message":"69","line":1,"column":16,"nodeType":"61","messageId":"62","endLine":1,"endColumn":25},{"ruleId":"59","severity":1,"message":"70","line":1,"column":27,"nodeType":"61","messageId":"62","endLine":1,"endColumn":35},{"ruleId":"59","severity":1,"message":"71","line":9,"column":10,"nodeType":"61","messageId":"62","endLine":9,"endColumn":28},{"ruleId":"72","severity":1,"message":"73","line":18,"column":21,"nodeType":"74","messageId":"75","endLine":18,"endColumn":47},{"ruleId":"59","severity":1,"message":"69","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":26},{"ruleId":"76","severity":1,"message":"77","line":41,"column":17,"nodeType":"78","endLine":41,"endColumn":49},"no-unused-vars","'filteredPlaces' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'places'. Either include it or remove the dependency array.","ArrayExpression",["79"],"React Hook useEffect has a missing dependency: 'elRefs'. Either include it or remove the dependency array.",["80"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'LocationOnOutlined' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [places, rating]",{"range":"85","text":"86"},"Update the dependencies array to be: [elRefs, places]",{"range":"87","text":"88"},[1117,1125],"[places, rating]",[617,625],"[elRefs, places]"]